package com.fjellsoftware.retaildemo.autogenerated.orm.main;

import io.loppi.graphql.*;
import io.loppi.graphql.integration.orm.*;
import io.loppi.graphql.integration.orm.serviceconfiguration.*;
import io.loppi.graphql.GraphQLServiceInitializationException;
import io.loppi.orm.*;
import io.loppi.orm.serviceconfiguration.*;
import io.loppi.orm.metamodel.IdReferenceClasses;
import io.loppi.orm.metamodel.*;
import org.jetbrains.annotations.NotNull;

import java.util.Objects;
import javax.sql.DataSource;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class RetailDemoORMService{
    private final ORMService<RetailDemoTableQueryResult, RetailDemoRowToMutate> ormService;
    private final RetailDemoMeta retailDemoMeta;
    private final RetailDemoDatabaseService databaseService;

    public RetailDemoORMService(DataSource dataSource, ORMServiceConfiguration configuration) throws ORMInitializationException{
        Objects.requireNonNull(dataSource);
        IdReferenceClasses idReferenceClasses = new IdReferenceClasses(
                RetailDemoIdReferenceInt.class, RetailDemoIdReferenceLong.class, RetailDemoIdReferenceUUID.class);
        TopSchemaClasses topSchemaClasses = new TopSchemaClasses(
                RetailDemoRowReference.class, RetailDemoRowToMutate.class, RetailDemoRowToUpsert.class,
                 RetailDemoRowToInsert.class, RetailDemoRowToUpdate.class, RetailDemoRowToDelete.class,
                 RetailDemoTableQueryResult.class, RetailDemoAggregateQueryResult.class, 
                RetailDemoViewQueryResult.class, RetailDemoSQLRoutineResult.class);
        this.ormService = ORMService.initializeJDBC(
                dataSource, new RetailDemoMetaConfiguration().createEveryMetadataConfiguration(),
                idReferenceClasses, topSchemaClasses, configuration);
        this.retailDemoMeta = new RetailDemoMeta(ormService.getMetamodel(), ormService.getMainSchema());
        this.databaseService = new RetailDemoDatabaseService(ormService);
    }

    public @NotNull RetailDemoMeta getMeta(){
        return retailDemoMeta;
    }

    public @NotNull RetailDemoDatabaseService getDatabaseServiceJDBC(){
        return databaseService;
    }

    public @NotNull GraphQLService createORMIntegratedGraphQLService(
            GraphQLORMSchemaConfiguration graphQLORMSchemaConfiguration,
            GraphQLORMServiceConfiguration graphQLORMServiceConfiguration)
            throws GraphQLServiceInitializationException{
        return ormService.createORMIntegratedGraphQLService(graphQLORMSchemaConfiguration, graphQLORMServiceConfiguration);
    }
}