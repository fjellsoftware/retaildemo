/*
 * Â© 2023. This work is openly licensed via CC0 1.0.
 * https://creativecommons.org/publicdomain/zero/1.0/
 */

package com.fjellsoftware.retaildemo.autogenerated.orm;

import io.loppi.includablevalues.*;
import io.loppi.orm.metamodel.*;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class MetricValueMeta{
    private static final Class<MetricValueResult> referenceClass = MetricValueResult.class;

    private static final String METRIC_VALUE_ID_FIELD_NAME = "metricValueId";
    private static final String METRIC_KIND_FIELD_NAME = "metricKind";
    private static final String METRIC_KIND_ID_FIELD_NAME = "metricKindId";
    private static final String VALUE_FIELD_NAME = "value";
    private static final String CREATED_AT_FIELD_NAME = "createdAt";

    static final ScalarAttributeReference<MetricValueResult, IncludableLong> metricValueIdInternalReference = 
        new ScalarAttributeReference<>(referenceClass, METRIC_VALUE_ID_FIELD_NAME, IncludableLong.class);
    static final OwnerAssociationAttributeReference<MetricValueResult, IncludableAssociation<MetricKindResult>, MetricKindResult> metricKindInternalReference = 
        new OwnerAssociationAttributeReference<>(referenceClass, METRIC_KIND_FIELD_NAME, false, MetricKindResult.class);

    public final ScalarAttribute<MetricValueResult, IncludableLong> metricValueId;
    public final OwnerAssociationAttribute<MetricValueResult, IncludableAssociation<MetricKindResult>, MetricKindResult> metricKind;
    public final ScalarAttribute<MetricValueResult, IncludableLong> metricKindId;
    public final ScalarAttribute<MetricValueResult, IncludableDouble> value;
    public final ScalarAttribute<MetricValueResult, IncludableOffsetDateTime> createdAt;

    private final EntityMetadata<MetricValueResult> entityMetadata;

    @SuppressWarnings({"unchecked"})
    public MetricValueMeta(LoppiMetamodel<RetailDemoDatabaseQueryResult> loppiMetamodel){
        this.entityMetadata = loppiMetamodel.getEntityMetadata(referenceClass).getOrThrow();
        this.metricValueId = (ScalarAttribute<MetricValueResult, IncludableLong>) entityMetadata.tryGetScalarAttribute(METRIC_VALUE_ID_FIELD_NAME).getOrThrow();
        this.metricKind = (OwnerAssociationAttribute<MetricValueResult, IncludableAssociation<MetricKindResult>, MetricKindResult>) entityMetadata.tryGetAssociationAttribute(METRIC_KIND_FIELD_NAME).getOrThrow();
        this.metricKindId = (ScalarAttribute<MetricValueResult, IncludableLong>) entityMetadata.tryGetScalarAttribute(METRIC_KIND_ID_FIELD_NAME).getOrThrow();
        this.value = (ScalarAttribute<MetricValueResult, IncludableDouble>) entityMetadata.tryGetScalarAttribute(VALUE_FIELD_NAME).getOrThrow();
        this.createdAt = (ScalarAttribute<MetricValueResult, IncludableOffsetDateTime>) entityMetadata.tryGetScalarAttribute(CREATED_AT_FIELD_NAME).getOrThrow();
    }

    public EntityMetadata<MetricValueResult> getEntityMetadata(){
        return entityMetadata;
    }
}
