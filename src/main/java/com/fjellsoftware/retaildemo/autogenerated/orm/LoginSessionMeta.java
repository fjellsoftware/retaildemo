package com.fjellsoftware.retaildemo.autogenerated.orm;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import io.loppi.orm.metamodel.attribute.*;
import io.loppi.orm.metamodel.attributereference.*;
import com.fjellsoftware.javafunctionalutils.ImmutableMap;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class LoginSessionMeta implements MetaWithIdAttribute<LoginSessionResult> {
    private static final Class<LoginSessionResult> referenceClass = LoginSessionResult.class;

    static final String BASE_NAME = "LoginSession";
    static final String PLURAL_NAME = "LoginSessions";
    static final String TABLE_NAME = "login_session";

    private static final String LOGIN_SESSION_ID_FIELD_NAME = "loginSessionId";
    private static final String IS_SIGNED_OUT_FIELD_NAME = "isSignedOut";
    private static final String CREATED_AT_FIELD_NAME = "createdAt";
    private static final String LAST_UPDATED_AT_FIELD_NAME = "lastUpdatedAt";
    private static final String USER_ACCOUNT_FIELD_NAME = "userAccount";
    private static final String USER_ACCOUNT_ID_FIELD_NAME = "userAccountId";

    static final ImmutableMap<String,String> COLUMN_ATTRIBUTE_NAME_TO_COLUMN_NAME = ImmutableMap.of(
            new ImmutableMap.Entry<>(LOGIN_SESSION_ID_FIELD_NAME, "login_session_id"),
            new ImmutableMap.Entry<>(IS_SIGNED_OUT_FIELD_NAME, "is_signed_out"),
            new ImmutableMap.Entry<>(CREATED_AT_FIELD_NAME, "created_at"),
            new ImmutableMap.Entry<>(LAST_UPDATED_AT_FIELD_NAME, "last_updated_at"),
            new ImmutableMap.Entry<>(USER_ACCOUNT_FIELD_NAME, "user_account_id"),
            new ImmutableMap.Entry<>(USER_ACCOUNT_ID_FIELD_NAME, "user_account_id"));

    static final ScalarAttributeReference<LoginSessionResult, IncludableUUID> loginSessionIdInternalReference = 
        new ScalarAttributeReference<>(referenceClass, LOGIN_SESSION_ID_FIELD_NAME, IncludableUUID.class);
    static final OwnerAssociationAttributeReference<LoginSessionResult, IncludableAssociation<UserAccountResult>, UserAccountResult> userAccountInternalReference = 
        new OwnerAssociationAttributeReference<>(referenceClass, USER_ACCOUNT_FIELD_NAME, false, UserAccountResult.class);

    public final ScalarAttribute<LoginSessionResult, IncludableUUID> loginSessionId;
    public final ScalarAttribute<LoginSessionResult, IncludableBoolean> isSignedOut;
    public final ScalarAttribute<LoginSessionResult, IncludableOffsetDateTime> createdAt;
    public final ScalarAttribute<LoginSessionResult, IncludableOffsetDateTime> lastUpdatedAt;
    public final OwnerAssociationAttribute<LoginSessionResult, IncludableAssociation<UserAccountResult>, UserAccountResult> userAccount;
    public final ScalarAttribute<LoginSessionResult, IncludableUUID> userAccountId;

    private final EntityMetadata<LoginSessionResult> entity_metadata;

    @SuppressWarnings({"unchecked"})
    public LoginSessionMeta(ORMMetamodel<RetailDemoTableQueryResult> oRMMetamodel){
        this.entity_metadata = oRMMetamodel.getEntityMetadata(referenceClass);
        this.loginSessionId = (ScalarAttribute<LoginSessionResult, IncludableUUID>) entity_metadata.getScalarAttributeByName(LOGIN_SESSION_ID_FIELD_NAME).getOrThrow();
        this.isSignedOut = (ScalarAttribute<LoginSessionResult, IncludableBoolean>) entity_metadata.getScalarAttributeByName(IS_SIGNED_OUT_FIELD_NAME).getOrThrow();
        this.createdAt = (ScalarAttribute<LoginSessionResult, IncludableOffsetDateTime>) entity_metadata.getScalarAttributeByName(CREATED_AT_FIELD_NAME).getOrThrow();
        this.lastUpdatedAt = (ScalarAttribute<LoginSessionResult, IncludableOffsetDateTime>) entity_metadata.getScalarAttributeByName(LAST_UPDATED_AT_FIELD_NAME).getOrThrow();
        this.userAccount = (OwnerAssociationAttribute<LoginSessionResult, IncludableAssociation<UserAccountResult>, UserAccountResult>) entity_metadata.getAssociationAttributeByName(USER_ACCOUNT_FIELD_NAME).getOrThrow();
        this.userAccountId = (ScalarAttribute<LoginSessionResult, IncludableUUID>) entity_metadata.getScalarAttributeByName(USER_ACCOUNT_ID_FIELD_NAME).getOrThrow();
    }

    public EntityMetadata<LoginSessionResult> getEntityMetadata(){
        return entity_metadata;
    }
}