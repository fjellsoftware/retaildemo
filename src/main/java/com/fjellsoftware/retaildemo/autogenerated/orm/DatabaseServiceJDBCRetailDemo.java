/*
 * Â© 2023. This work is openly licensed via CC0 1.0.
 * https://creativecommons.org/publicdomain/zero/1.0/
 */

package com.fjellsoftware.retaildemo.autogenerated.orm;


import io.loppi.orm.*;
import io.loppi.orm.query.*;
import io.loppi.orm.metamodel.QueryResult;
import com.fjellsoftware.javafunctionalutils.ImmutableList;
import org.jetbrains.annotations.NotNull;

import java.util.List;
import java.util.Set;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public class DatabaseServiceJDBCRetailDemo {

    private final LoppiService<RetailDemoDatabaseQueryResult, RetailDemoRowToMutate> loppiServiceInternal;

    DatabaseServiceJDBCRetailDemo(
            LoppiService<RetailDemoDatabaseQueryResult, RetailDemoRowToMutate> loppiServiceInternal) {
        this.loppiServiceInternal = loppiServiceInternal;
    }

    public <T extends RetailDemoDatabaseQueryResult> @NotNull QueryExecutionResult<T> executeQuery(@NotNull DatabaseQuery<T> databaseQuery)
            throws PostgresExecutionException {
        return this.loppiServiceInternal.executeQuery(databaseQuery);
    }

    public @NotNull MutationExecutionResult executeMutation(
            @NotNull List<RetailDemoRowToMutate> mutation) throws PostgresExecutionException, DuplicateIdModificationException {
        return loppiServiceInternal.executeMutation(mutation);
    }

    public <T extends RetailDemoDatabaseQueryResult> @NotNull MutationQueryExecutionResult<T> executeMutationQuery(
            @NotNull MutationQuery<RetailDemoRowToMutate, T> mutationQuery) throws PostgresExecutionException, DuplicateIdModificationException {
        return loppiServiceInternal.executeMutationQuery(mutationQuery);
    }

    public <T extends RetailDemoDatabaseQueryResult> @NotNull QueryBuilder<T> createQueryBuilder(@NotNull Class<T> rootClass, int limit){
        return loppiServiceInternal.createQueryBuilder(rootClass, limit);
    }

    public <T extends RetailDemoDatabaseQueryResult> @NotNull MutationQuery<RetailDemoRowToMutate, T> createMutationQuery(
            @NotNull List<RetailDemoRowToMutate> mutation, @NotNull DatabaseQuery<T> databaseQuery){
        return loppiServiceInternal.createMutationQuery(mutation, databaseQuery);
    }
}
