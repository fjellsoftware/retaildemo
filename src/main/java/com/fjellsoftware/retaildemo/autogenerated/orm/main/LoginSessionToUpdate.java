package com.fjellsoftware.retaildemo.autogenerated.orm.main;

import java.util.UUID;
import java.time.OffsetDateTime;
import java.math.BigDecimal;
import java.util.Objects;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import org.jetbrains.annotations.NotNull;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class LoginSessionToUpdate implements RetailDemoRowToUpdate {
    private final UUID whereLoginSessionId;
    private IncludableBoolean isSignedOut = IncludableBoolean.notIncluded();
    private IncludableOffsetDateTime createdAt = IncludableOffsetDateTime.notIncluded();
    private IncludableOffsetDateTime lastUpdatedAt = IncludableOffsetDateTime.notIncluded();
    private IncludableRowReference<UserAccountReference> userAccount = IncludableRowReference.notIncluded();

    public LoginSessionToUpdate(@NotNull UUID whereLoginSessionId){
        Objects.requireNonNull(whereLoginSessionId);
        this.whereLoginSessionId = whereLoginSessionId;
    }

    public @NotNull UUID getWhereLoginSessionId(){
        return whereLoginSessionId;
    }

    public @NotNull IncludableBoolean getIsSignedOut(){
        return isSignedOut;
    }

    public void setIsSignedOut(@NotNull IncludableBoolean isSignedOut){
        Objects.requireNonNull(isSignedOut);
        this.isSignedOut = isSignedOut;
    }

    public void setIsSignedOutIncludableOf(boolean isSignedOut){
        this.isSignedOut = IncludableBoolean.of(isSignedOut);
    }

    public @NotNull IncludableOffsetDateTime getCreatedAt(){
        return createdAt;
    }

    public void setCreatedAt(@NotNull IncludableOffsetDateTime createdAt){
        Objects.requireNonNull(createdAt);
        this.createdAt = createdAt;
    }

    public void setCreatedAtIncludableOf(@NotNull OffsetDateTime createdAt){
        Objects.requireNonNull(createdAt);
        this.createdAt = IncludableOffsetDateTime.of(createdAt);
    }

    public @NotNull IncludableOffsetDateTime getLastUpdatedAt(){
        return lastUpdatedAt;
    }

    public void setLastUpdatedAt(@NotNull IncludableOffsetDateTime lastUpdatedAt){
        Objects.requireNonNull(lastUpdatedAt);
        this.lastUpdatedAt = lastUpdatedAt;
    }

    public void setLastUpdatedAtIncludableOf(@NotNull OffsetDateTime lastUpdatedAt){
        Objects.requireNonNull(lastUpdatedAt);
        this.lastUpdatedAt = IncludableOffsetDateTime.of(lastUpdatedAt);
    }

    public @NotNull IncludableRowReference<UserAccountReference> getUserAccount(){
        return userAccount;
    }

    public void setUserAccount(@NotNull IncludableRowReference<UserAccountReference> userAccount){
        Objects.requireNonNull(userAccount);
        this.userAccount = userAccount;
    }

    public void setUserAccountIncludableOf(@NotNull UserAccountReference userAccount){
        Objects.requireNonNull(userAccount);
        this.userAccount = IncludableRowReference.of(userAccount);
    }

}