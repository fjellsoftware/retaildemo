/*
 * Â© 2023. This work is openly licensed via CC0 1.0.
 * https://creativecommons.org/publicdomain/zero/1.0/
 */

package com.fjellsoftware.retaildemo.autogenerated.orm;

import io.loppi.includablevalues.*;
import io.loppi.orm.LoppiAutogeneratedClassesParser;
import io.loppi.orm.metamodel.*;
import com.fjellsoftware.javafunctionalutils.NullUtils;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

import java.beans.ConstructorProperties;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class PurchaseOrderResult implements RetailDemoDatabaseQueryResult {
    private final IncludableInt purchaseOrderId;
    private final IncludableAssociation<CountryResult> country;
    private final IncludableInt countryId;
    private final IncludableOffsetDateTime createdAt;
    private final IncludableOffsetDateTime lastUpdatedAt;
    private final IncludableString orderStatus;
    private final IncludableString address;
    private final IncludableString name;
    private final IncludableString phoneNumber;
    private final IncludableNullableAssociation<UserAccountResult> customer;
    private final IncludableNullableUUID customerId;
    private final IncludableAssociationList<OrderLineResult> orderLines;

    @ConstructorProperties({"purchaseOrderId", "country", "countryId", "createdAt", "lastUpdatedAt", "orderStatus", 
        "address", "name", "phoneNumber", "customer", "customerId", "orderLines"})
    public PurchaseOrderResult(
            IncludableInt purchaseOrderId, IncludableAssociation<CountryResult> country, IncludableInt countryId, 
            IncludableOffsetDateTime createdAt, IncludableOffsetDateTime lastUpdatedAt, IncludableString orderStatus, 
            IncludableString address, IncludableString name, IncludableString phoneNumber, 
            IncludableNullableAssociation<UserAccountResult> customer, IncludableNullableUUID customerId, 
            IncludableAssociationList<OrderLineResult> orderLines){
        NullUtils.requireAllNonNull(purchaseOrderId, country, countryId, createdAt, lastUpdatedAt, orderStatus,
                address, name, phoneNumber, customer, customerId, orderLines);
        this.purchaseOrderId = purchaseOrderId;
        this.country = country;
        this.countryId = countryId;
        this.createdAt = createdAt;
        this.lastUpdatedAt = lastUpdatedAt;
        this.orderStatus = orderStatus;
        this.address = address;
        this.name = name;
        this.phoneNumber = phoneNumber;
        this.customer = customer;
        this.customerId = customerId;
        this.orderLines = orderLines;
    }

    public IncludableInt getPurchaseOrderId(){
        return purchaseOrderId;
    }

    public IncludableAssociation<CountryResult> getCountry(){
        return country;
    }

    public IncludableInt getCountryId(){
        return countryId;
    }

    public IncludableOffsetDateTime getCreatedAt(){
        return createdAt;
    }

    public IncludableOffsetDateTime getLastUpdatedAt(){
        return lastUpdatedAt;
    }

    public IncludableString getOrderStatus(){
        return orderStatus;
    }

    public IncludableString getAddress(){
        return address;
    }

    public IncludableString getName(){
        return name;
    }

    public IncludableString getPhoneNumber(){
        return phoneNumber;
    }

    public IncludableNullableAssociation<UserAccountResult> getCustomer(){
        return customer;
    }

    public IncludableNullableUUID getCustomerId(){
        return customerId;
    }

    public IncludableAssociationList<OrderLineResult> getOrderLines(){
        return orderLines;
    }


}
