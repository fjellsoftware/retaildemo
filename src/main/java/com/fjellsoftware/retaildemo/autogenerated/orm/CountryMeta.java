package com.fjellsoftware.retaildemo.autogenerated.orm;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import io.loppi.orm.metamodel.attribute.*;
import io.loppi.orm.metamodel.attributereference.*;
import com.fjellsoftware.javafunctionalutils.ImmutableMap;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class CountryMeta implements MetaWithIdAttribute<CountryResult> {
    private static final Class<CountryResult> referenceClass = CountryResult.class;

    static final String BASE_NAME = "Country";
    static final String PLURAL_NAME = "Countries";
    static final String TABLE_NAME = "country";

    private static final String COUNTRY_ID_FIELD_NAME = "countryId";
    private static final String NAME_FIELD_NAME = "name";
    private static final String PURCHASE_ORDERS_FIELD_NAME = "purchaseOrders";

    static final ImmutableMap<String,String> COLUMN_ATTRIBUTE_NAME_TO_COLUMN_NAME = ImmutableMap.of(
            new ImmutableMap.Entry<>(COUNTRY_ID_FIELD_NAME, "country_id"),
            new ImmutableMap.Entry<>(NAME_FIELD_NAME, "name"));

    static final ScalarAttributeReference<CountryResult, IncludableInt> countryIdInternalReference = 
        new ScalarAttributeReference<>(referenceClass, COUNTRY_ID_FIELD_NAME, IncludableInt.class);
    static final PluralDerivedAssociationAttributeReference<CountryResult, PurchaseOrderResult> purchaseOrdersInternalReference = 
        new PluralDerivedAssociationAttributeReference<>(referenceClass, PURCHASE_ORDERS_FIELD_NAME, PurchaseOrderResult.class);

    public final ScalarAttribute<CountryResult, IncludableInt> countryId;
    public final ScalarAttribute<CountryResult, IncludableString> name;
    public final PluralDerivedAssociationAttribute<CountryResult, PurchaseOrderResult> purchaseOrders;

    private final EntityMetadata<CountryResult> entity_metadata;

    @SuppressWarnings({"unchecked"})
    public CountryMeta(ORMMetamodel<RetailDemoTableQueryResult> oRMMetamodel){
        this.entity_metadata = oRMMetamodel.getEntityMetadata(referenceClass);
        this.countryId = (ScalarAttribute<CountryResult, IncludableInt>) entity_metadata.getScalarAttributeByName(COUNTRY_ID_FIELD_NAME).getOrThrow();
        this.name = (ScalarAttribute<CountryResult, IncludableString>) entity_metadata.getScalarAttributeByName(NAME_FIELD_NAME).getOrThrow();
        this.purchaseOrders = (PluralDerivedAssociationAttribute<CountryResult, PurchaseOrderResult>) entity_metadata.getAssociationAttributeByName(PURCHASE_ORDERS_FIELD_NAME).getOrThrow();
    }

    public EntityMetadata<CountryResult> getEntityMetadata(){
        return entity_metadata;
    }
}