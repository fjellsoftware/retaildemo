package com.fjellsoftware.retaildemo.autogenerated.orm;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import io.loppi.orm.metamodel.attribute.*;
import io.loppi.orm.metamodel.attributereference.*;
import com.fjellsoftware.javafunctionalutils.ImmutableMap;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class OrderLineMeta implements MetaWithIdAttribute<OrderLineResult> {
    private static final Class<OrderLineResult> referenceClass = OrderLineResult.class;

    static final String BASE_NAME = "OrderLine";
    static final String PLURAL_NAME = "OrderLines";
    static final String TABLE_NAME = "order_line";

    private static final String PURCHASE_ORDER_FIELD_NAME = "purchaseOrder";
    private static final String PURCHASE_ORDER_ID_FIELD_NAME = "purchaseOrderId";
    private static final String QUANTITY_FIELD_NAME = "quantity";
    private static final String UNIT_PRICE_FIELD_NAME = "unitPrice";
    private static final String PRODUCT_FIELD_NAME = "product";
    private static final String PRODUCT_ID_FIELD_NAME = "productId";
    private static final String ORDER_LINE_ID_FIELD_NAME = "orderLineId";
    private static final String CREATED_AT_FIELD_NAME = "createdAt";

    static final ImmutableMap<String,String> COLUMN_ATTRIBUTE_NAME_TO_COLUMN_NAME = ImmutableMap.of(
            new ImmutableMap.Entry<>(PURCHASE_ORDER_FIELD_NAME, "purchase_order_id"),
            new ImmutableMap.Entry<>(PURCHASE_ORDER_ID_FIELD_NAME, "purchase_order_id"),
            new ImmutableMap.Entry<>(QUANTITY_FIELD_NAME, "quantity"),
            new ImmutableMap.Entry<>(UNIT_PRICE_FIELD_NAME, "unit_price"),
            new ImmutableMap.Entry<>(PRODUCT_FIELD_NAME, "product_id"),
            new ImmutableMap.Entry<>(PRODUCT_ID_FIELD_NAME, "product_id"),
            new ImmutableMap.Entry<>(ORDER_LINE_ID_FIELD_NAME, "order_line_id"),
            new ImmutableMap.Entry<>(CREATED_AT_FIELD_NAME, "created_at"));

    static final OwnerAssociationAttributeReference<OrderLineResult, IncludableAssociation<PurchaseOrderResult>, PurchaseOrderResult> purchaseOrderInternalReference = 
        new OwnerAssociationAttributeReference<>(referenceClass, PURCHASE_ORDER_FIELD_NAME, false, PurchaseOrderResult.class);
    static final OwnerAssociationAttributeReference<OrderLineResult, IncludableAssociation<ProductResult>, ProductResult> productInternalReference = 
        new OwnerAssociationAttributeReference<>(referenceClass, PRODUCT_FIELD_NAME, false, ProductResult.class);
    static final ScalarAttributeReference<OrderLineResult, IncludableInt> orderLineIdInternalReference = 
        new ScalarAttributeReference<>(referenceClass, ORDER_LINE_ID_FIELD_NAME, IncludableInt.class);

    public final OwnerAssociationAttribute<OrderLineResult, IncludableAssociation<PurchaseOrderResult>, PurchaseOrderResult> purchaseOrder;
    public final ScalarAttribute<OrderLineResult, IncludableInt> purchaseOrderId;
    public final ScalarAttribute<OrderLineResult, IncludableInt> quantity;
    public final ScalarAttribute<OrderLineResult, IncludableBigDecimal> unitPrice;
    public final OwnerAssociationAttribute<OrderLineResult, IncludableAssociation<ProductResult>, ProductResult> product;
    public final ScalarAttribute<OrderLineResult, IncludableInt> productId;
    public final ScalarAttribute<OrderLineResult, IncludableInt> orderLineId;
    public final ScalarAttribute<OrderLineResult, IncludableOffsetDateTime> createdAt;

    private final EntityMetadata<OrderLineResult> entity_metadata;

    @SuppressWarnings({"unchecked"})
    public OrderLineMeta(ORMMetamodel<RetailDemoTableQueryResult> oRMMetamodel){
        this.entity_metadata = oRMMetamodel.getEntityMetadata(referenceClass);
        this.purchaseOrder = (OwnerAssociationAttribute<OrderLineResult, IncludableAssociation<PurchaseOrderResult>, PurchaseOrderResult>) entity_metadata.getAssociationAttributeByName(PURCHASE_ORDER_FIELD_NAME).getOrThrow();
        this.purchaseOrderId = (ScalarAttribute<OrderLineResult, IncludableInt>) entity_metadata.getScalarAttributeByName(PURCHASE_ORDER_ID_FIELD_NAME).getOrThrow();
        this.quantity = (ScalarAttribute<OrderLineResult, IncludableInt>) entity_metadata.getScalarAttributeByName(QUANTITY_FIELD_NAME).getOrThrow();
        this.unitPrice = (ScalarAttribute<OrderLineResult, IncludableBigDecimal>) entity_metadata.getScalarAttributeByName(UNIT_PRICE_FIELD_NAME).getOrThrow();
        this.product = (OwnerAssociationAttribute<OrderLineResult, IncludableAssociation<ProductResult>, ProductResult>) entity_metadata.getAssociationAttributeByName(PRODUCT_FIELD_NAME).getOrThrow();
        this.productId = (ScalarAttribute<OrderLineResult, IncludableInt>) entity_metadata.getScalarAttributeByName(PRODUCT_ID_FIELD_NAME).getOrThrow();
        this.orderLineId = (ScalarAttribute<OrderLineResult, IncludableInt>) entity_metadata.getScalarAttributeByName(ORDER_LINE_ID_FIELD_NAME).getOrThrow();
        this.createdAt = (ScalarAttribute<OrderLineResult, IncludableOffsetDateTime>) entity_metadata.getScalarAttributeByName(CREATED_AT_FIELD_NAME).getOrThrow();
    }

    public EntityMetadata<OrderLineResult> getEntityMetadata(){
        return entity_metadata;
    }
}