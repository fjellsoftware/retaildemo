package com.fjellsoftware.retaildemo.autogenerated.orm.main;

import java.util.UUID;
import java.time.OffsetDateTime;
import java.math.BigDecimal;
import java.util.Objects;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import org.jetbrains.annotations.NotNull;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class PurchaseOrderToUpdate implements RetailDemoRowToUpdate {
    private final int wherePurchaseOrderId;
    private IncludableRowReference<CountryReference> country = IncludableRowReference.notIncluded();
    private IncludableOffsetDateTime createdAt = IncludableOffsetDateTime.notIncluded();
    private IncludableOffsetDateTime lastUpdatedAt = IncludableOffsetDateTime.notIncluded();
    private IncludableString orderStatus = IncludableString.notIncluded();
    private IncludableString address = IncludableString.notIncluded();
    private IncludableString name = IncludableString.notIncluded();
    private IncludableString phoneNumber = IncludableString.notIncluded();
    private IncludableNullableRowReference<UserAccountReference> customer = IncludableNullableRowReference.notIncluded();

    public PurchaseOrderToUpdate(int wherePurchaseOrderId){
        this.wherePurchaseOrderId = wherePurchaseOrderId;
    }

    public int getWherePurchaseOrderId(){
        return wherePurchaseOrderId;
    }

    public @NotNull IncludableRowReference<CountryReference> getCountry(){
        return country;
    }

    public void setCountry(@NotNull IncludableRowReference<CountryReference> country){
        Objects.requireNonNull(country);
        this.country = country;
    }

    public void setCountryIncludableOf(@NotNull CountryReference country){
        Objects.requireNonNull(country);
        this.country = IncludableRowReference.of(country);
    }

    public @NotNull IncludableOffsetDateTime getCreatedAt(){
        return createdAt;
    }

    public void setCreatedAt(@NotNull IncludableOffsetDateTime createdAt){
        Objects.requireNonNull(createdAt);
        this.createdAt = createdAt;
    }

    public void setCreatedAtIncludableOf(@NotNull OffsetDateTime createdAt){
        Objects.requireNonNull(createdAt);
        this.createdAt = IncludableOffsetDateTime.of(createdAt);
    }

    public @NotNull IncludableOffsetDateTime getLastUpdatedAt(){
        return lastUpdatedAt;
    }

    public void setLastUpdatedAt(@NotNull IncludableOffsetDateTime lastUpdatedAt){
        Objects.requireNonNull(lastUpdatedAt);
        this.lastUpdatedAt = lastUpdatedAt;
    }

    public void setLastUpdatedAtIncludableOf(@NotNull OffsetDateTime lastUpdatedAt){
        Objects.requireNonNull(lastUpdatedAt);
        this.lastUpdatedAt = IncludableOffsetDateTime.of(lastUpdatedAt);
    }

    public @NotNull IncludableString getOrderStatus(){
        return orderStatus;
    }

    public void setOrderStatus(@NotNull IncludableString orderStatus){
        Objects.requireNonNull(orderStatus);
        this.orderStatus = orderStatus;
    }

    public void setOrderStatusIncludableOf(@NotNull String orderStatus){
        Objects.requireNonNull(orderStatus);
        this.orderStatus = IncludableString.of(orderStatus);
    }

    public @NotNull IncludableString getAddress(){
        return address;
    }

    public void setAddress(@NotNull IncludableString address){
        Objects.requireNonNull(address);
        this.address = address;
    }

    public void setAddressIncludableOf(@NotNull String address){
        Objects.requireNonNull(address);
        this.address = IncludableString.of(address);
    }

    public @NotNull IncludableString getName(){
        return name;
    }

    public void setName(@NotNull IncludableString name){
        Objects.requireNonNull(name);
        this.name = name;
    }

    public void setNameIncludableOf(@NotNull String name){
        Objects.requireNonNull(name);
        this.name = IncludableString.of(name);
    }

    public @NotNull IncludableString getPhoneNumber(){
        return phoneNumber;
    }

    public void setPhoneNumber(@NotNull IncludableString phoneNumber){
        Objects.requireNonNull(phoneNumber);
        this.phoneNumber = phoneNumber;
    }

    public void setPhoneNumberIncludableOf(@NotNull String phoneNumber){
        Objects.requireNonNull(phoneNumber);
        this.phoneNumber = IncludableString.of(phoneNumber);
    }

    public @NotNull IncludableNullableRowReference<UserAccountReference> getCustomer(){
        return customer;
    }

    public void setCustomer(@NotNull IncludableNullableRowReference<UserAccountReference> customer){
        Objects.requireNonNull(customer);
        this.customer = customer;
    }

    public void setCustomerIncludableOf(@NotNull UserAccountReference customer){
        Objects.requireNonNull(customer);
        this.customer = IncludableNullableRowReference.of(customer);
    }

}