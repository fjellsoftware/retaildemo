package com.fjellsoftware.retaildemo.autogenerated.orm.main;

import java.util.UUID;
import java.time.OffsetDateTime;
import java.math.BigDecimal;
import java.util.Objects;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import org.jetbrains.annotations.NotNull;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class UserAccountToUpdate implements RetailDemoRowToUpdate {
    private IncludableString name = IncludableString.notIncluded();
    private IncludableString username = IncludableString.notIncluded();
    private IncludableString hashedPassword = IncludableString.notIncluded();
    private IncludableOffsetDateTime createdAt = IncludableOffsetDateTime.notIncluded();
    private IncludableOffsetDateTime lastUpdatedAt = IncludableOffsetDateTime.notIncluded();
    private IncludableString role = IncludableString.notIncluded();
    private final UUID whereUserAccountId;

    public UserAccountToUpdate(@NotNull UUID whereUserAccountId){
        Objects.requireNonNull(whereUserAccountId);
        this.whereUserAccountId = whereUserAccountId;
    }

    public @NotNull IncludableString getName(){
        return name;
    }

    public void setName(@NotNull IncludableString name){
        Objects.requireNonNull(name);
        this.name = name;
    }

    public void setNameIncludableOf(@NotNull String name){
        Objects.requireNonNull(name);
        this.name = IncludableString.of(name);
    }

    public @NotNull IncludableString getUsername(){
        return username;
    }

    public void setUsername(@NotNull IncludableString username){
        Objects.requireNonNull(username);
        this.username = username;
    }

    public void setUsernameIncludableOf(@NotNull String username){
        Objects.requireNonNull(username);
        this.username = IncludableString.of(username);
    }

    public @NotNull IncludableString getHashedPassword(){
        return hashedPassword;
    }

    public void setHashedPassword(@NotNull IncludableString hashedPassword){
        Objects.requireNonNull(hashedPassword);
        this.hashedPassword = hashedPassword;
    }

    public void setHashedPasswordIncludableOf(@NotNull String hashedPassword){
        Objects.requireNonNull(hashedPassword);
        this.hashedPassword = IncludableString.of(hashedPassword);
    }

    public @NotNull IncludableOffsetDateTime getCreatedAt(){
        return createdAt;
    }

    public void setCreatedAt(@NotNull IncludableOffsetDateTime createdAt){
        Objects.requireNonNull(createdAt);
        this.createdAt = createdAt;
    }

    public void setCreatedAtIncludableOf(@NotNull OffsetDateTime createdAt){
        Objects.requireNonNull(createdAt);
        this.createdAt = IncludableOffsetDateTime.of(createdAt);
    }

    public @NotNull IncludableOffsetDateTime getLastUpdatedAt(){
        return lastUpdatedAt;
    }

    public void setLastUpdatedAt(@NotNull IncludableOffsetDateTime lastUpdatedAt){
        Objects.requireNonNull(lastUpdatedAt);
        this.lastUpdatedAt = lastUpdatedAt;
    }

    public void setLastUpdatedAtIncludableOf(@NotNull OffsetDateTime lastUpdatedAt){
        Objects.requireNonNull(lastUpdatedAt);
        this.lastUpdatedAt = IncludableOffsetDateTime.of(lastUpdatedAt);
    }

    public @NotNull IncludableString getRole(){
        return role;
    }

    public void setRole(@NotNull IncludableString role){
        Objects.requireNonNull(role);
        this.role = role;
    }

    public void setRoleIncludableOf(@NotNull String role){
        Objects.requireNonNull(role);
        this.role = IncludableString.of(role);
    }

    public @NotNull UUID getWhereUserAccountId(){
        return whereUserAccountId;
    }

}