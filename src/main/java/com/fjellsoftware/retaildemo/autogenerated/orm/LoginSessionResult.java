package com.fjellsoftware.retaildemo.autogenerated.orm;

import io.loppi.orm.includablevalues.*;
import io.loppi.orm.metamodel.*;
import com.fjellsoftware.javafunctionalutils.NullUtils;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

import java.beans.ConstructorProperties;

/////////////////////
/// AUTOGENERATED ///
/////////////////////

public final class LoginSessionResult implements RetailDemoTableQueryResult {
    private final IncludableUUID loginSessionId;
    private final IncludableBoolean isSignedOut;
    private final IncludableOffsetDateTime createdAt;
    private final IncludableOffsetDateTime lastUpdatedAt;
    private final IncludableAssociation<UserAccountResult> userAccount;
    private final IncludableUUID userAccountId;

    @ConstructorProperties({"loginSessionId", "isSignedOut", "createdAt", "lastUpdatedAt", "userAccount", 
        "userAccountId"})
    public LoginSessionResult(
            @NotNull IncludableUUID loginSessionId, @NotNull IncludableBoolean isSignedOut, 
            @NotNull IncludableOffsetDateTime createdAt, @NotNull IncludableOffsetDateTime lastUpdatedAt, 
            @NotNull IncludableAssociation<UserAccountResult> userAccount, @NotNull IncludableUUID userAccountId){
        NullUtils.requireAllNonNull(loginSessionId, isSignedOut, createdAt, lastUpdatedAt, userAccount, userAccountId);
        this.loginSessionId = loginSessionId;
        this.isSignedOut = isSignedOut;
        this.createdAt = createdAt;
        this.lastUpdatedAt = lastUpdatedAt;
        this.userAccount = userAccount;
        this.userAccountId = userAccountId;
    }

    public @NotNull IncludableUUID getLoginSessionId(){
        return loginSessionId;
    }

    public @NotNull IncludableBoolean getIsSignedOut(){
        return isSignedOut;
    }

    public @NotNull IncludableOffsetDateTime getCreatedAt(){
        return createdAt;
    }

    public @NotNull IncludableOffsetDateTime getLastUpdatedAt(){
        return lastUpdatedAt;
    }

    public @NotNull IncludableAssociation<UserAccountResult> getUserAccount(){
        return userAccount;
    }

    public @NotNull IncludableUUID getUserAccountId(){
        return userAccountId;
    }


}